---
alwaysApply: false
---
# Icon Metadata Guide

[View raw icons.json](mdc:.cursor/rules/icons/icons.json)

## Structure
- Each icon has:
  - `sprite`: Icon category (e.g., action, utility)
  - `symbol`: Icon name
  - `synonyms`: Keywords for searching
  - `className`: SLDS class for the icon
  - `visible`: Boolean, if the icon is available

## How to Search
- By name: `sprite:symbol` (e.g., `action:add_contact`)
- By tag: Search `synonyms` for relevant keywords (e.g., "add", "delete")
- By category: Filter by `sprite` (e.g., all "utility" icons)

## Example Queries
- "Find an icon for 'add user'" → search for `synonyms` containing 'add' and 'user'
- "List all action icons" → filter by `sprite: action`
- "What icon should I use for 'close'?" → search `synonyms` for 'close', 'exit', 'x'

## Code Example (Recommended Usage)
Use the following pattern for accessibility and clarity:

```html
<lightning-icon icon-name="action:approval" alternative-text="Approved" title="Approved"></lightning-icon>
<lightning-icon icon-name="action:delete" alternative-text="Delete" title="Delete"></lightning-icon>
<lightning-icon icon-name="action:new_note" alternative-text="New note" title="New note"></lightning-icon>
<lightning-icon icon-name="action:preview" alternative-text="Preview" title="Preview"></lightning-icon>
```

**Follow this pattern:** Always set `icon-name`, `alternative-text`, and `title` for each icon to ensure accessibility and clear intent.

## Categories
- action
- utility
- custom
- standard
- doctype
- (add more as needed)

## Tips
- If you know the SLDS class, you can use `className` directly in your markup.
- For best results, search by tag/keyword in `synonyms`.
- Keep your icon metadata up to date as your design system evolves.