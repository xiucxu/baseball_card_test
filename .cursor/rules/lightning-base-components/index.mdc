---
alwaysApply: false
---

# Lightning Base Components Index

- [lightning-accordion](lightning-accordion.md): This component is a user interface element that displays vertically stacked sections of content that can be expanded or collapsed, allowing users to control the visibility of content and reduce the need for scrolling.
- [lightning-accordion-section](lightning-accordion-section.md): This component is used to define the content of an individual section within an accordion-style interface, providing an interactive user experience where sections can be expanded or collapsed by clicking on the header text or toggle button.
- [lightning-alert](lightning-alert.md): This component allows the creation of an alert modal within a system, providing a consistent user experience by communicating system-wide states and not halting execution on the page.
- [lightning-aria-observer](lightning-aria-observer.md): This component provides a way to create accessible web components that work in both synthetic and native shadow, allowing for the connection of internal elements with external references, thus enhancing the user's experience with improved accessibility.
- [lightning-avatar](lightning-avatar.md): This component is an image representation of an object, such as a user or account, that provides a visual identifier with customizable sizing, shape, and fallback options for an enhanced user experience.
- [lightning-badge](lightning-badge.md): This component is a label that holds small amounts of information, such as unread notifications or text labels, and can be customized with text only or with an icon before or after the text, providing a clear and concise way to display brief information to the user.
- [lightning-barcode-scanner](lightning-barcode-scanner.md): This component provides a user-interactive barcode scanning function, which can be customized to support specific barcode types, scanning modes, and scanner sizes, and can be triggered by clicking an icon that can also be customized in size and appearance.
- [lightning-breadcrumb](lightning-breadcrumb.md): This component displays a navigational path relative to a parent page, providing users with an actionable and intuitive way to navigate through different levels of an application's hierarchy.
- [lightning-breadcrumbs](lightning-breadcrumbs.md): This component is an ordered list that displays the navigation path of a page, allowing users to easily navigate back to parent pages, with each item being actionable and separated by a greater-than sign for a clear and accessible user experience.
- [lightning-button](lightning-button.md): This component is a customizable button that can execute actions, display different colors and icons, and provide various user experiences such as submitting a form, starting a new task, triggering a new UI element, or specifying a new step in a process.
- [lightning-button-group](lightning-button-group.md): This component is a set of buttons displayed together to create a navigational bar, providing an interactive user experience with options for simple buttons, buttons with icons, disabled buttons, inverse buttons, and dropdown menus.
- [lightning-button-icon](lightning-button-icon.md): This component is an icon-only button that executes an action when clicked, providing a customizable user experience with options for different sizes, styles, and icons, and ensuring accessibility with features like hover text and assistive text.
- [lightning-button-icon-stateful](lightning-button-icon-stateful.md): This component is an icon-only button that toggles between two states, providing an interactive user experience for tasks such as capturing customer feedback or toggling settings.
- [lightning-button-menu](lightning-button-menu.md): This component is a button that displays a dropdown menu of actions or functions when clicked, providing an interactive user experience with customizable styles, loading states, and accessibility features.
- [lightning-button-stateful](lightning-button-stateful.md): This component is a stateful button that toggles between different states, displaying different labels and icons based on its selected state, providing an interactive user experience similar to a social media Like button.
- [lightning-card](lightning-card.md): This component is a stylized container that groups information, optionally including a title, body, actions, and a footer, providing an interactive user experience with clickable actions and links.
- [lightning-carousel](lightning-carousel.md): This component is a customizable image carousel that displays a series of images one at a time, with user controls for scrolling and optional auto-scrolling, providing an interactive and visually engaging user experience.
- [lightning-carousel-image](lightning-carousel-image.md): This component allows for the display of up to five images in a carousel format, complete with optional headers, descriptions, and hyperlinks, providing an interactive and visually engaging user experience.
- [lightning-checkbox-group](lightning-checkbox-group.md): This component is a group of checkboxes that allows users to select single or multiple options, with features for required selection, disabled selection, input validation, and customizable styling, providing an interactive and accessible user experience.
- [lightning-combobox](lightning-combobox.md): This component is an input element that allows users to make a single selection from a dropdown list of options, providing an interactive and accessible user experience.
- [lightning-confirm](lightning-confirm.md): This component allows the creation of a confirm modal within your application, providing a consistent user experience by asking for user confirmation before proceeding, with the modal's appearance and behavior customizable through various attributes.
- [lightning-context](lightning-context.md): This component provides a method for passing data through the component tree, allowing child components to consume context data without manual prop passing, enhancing the user experience by enabling theme consistency across components.
- [lightning-datatable](lightning-datatable.md): This component is a versatile table element that supports a variety of data types and allows for customization, providing users with a dynamic and interactive data viewing experience.
- [lightning-dialog](lightning-dialog.md): This component is a modal dialog that displays content in a layer above the application, maintaining user focus until closed, and can include a header, footer, and body content, with the ability to control its size and style.
- [lightning-dual-listbox](lightning-dual-listbox.md): This component is a dual listbox that allows users to select one or more options from a list on the left and move them to a list on the right, maintaining the order of the selected options and providing the ability to reorder them, offering a user-friendly interface for multi-selection and organization of options.
- [lightning-dynamic-icon](lightning-dynamic-icon.md): This component is a dynamic icon that visually indicates an event in progress, providing users with a variety of animated visual cues such as pulsing circles, rising and falling bars, and animated arrows.
- [lightning-file-download](lightning-file-download.md): This component allows users to download files from Experience Cloud sites using a generated URL, providing an interactive experience through a download button.
- [lightning-formatted-address](lightning-formatted-address.md): This component displays user-specified addresses in a format determined by the user's Salesforce locale, with options to include latitude and longitude, display the address in plain text, or show a static map, providing an interactive experience by linking the address to Google Maps.
- [lightning-formatted-date-time](lightning-formatted-date-time.md): This component is designed to display date and time in a formatted manner, providing a user-friendly experience by adapting to the user's locale and allowing customization of the date and time display.
- [lightning-formatted-email](lightning-formatted-email.md): This component displays a read-only email address as a clickable hyperlink, which when clicked, opens the default mail application for the user's device.
- [lightning-formatted-location](lightning-formatted-location.md): This component is designed to display a read-only representation of geographic coordinates (latitude and longitude) in decimal degrees format, providing users with a clear and precise location information.
- [lightning-formatted-name](lightning-formatted-name.md): This component displays names in a formatted manner based on user preferences, providing an experience that adapts to different locales and name formats.
- [lightning-formatted-number](lightning-formatted-number.md): This component is used to display formatted numbers for decimals, currency, and percentages, providing an end user with a customizable, locale-specific numerical display.
- [lightning-formatted-phone](lightning-formatted-phone.md): This component displays a read-only phone number as a clickable hyperlink that, when clicked, opens the default VOIP call application on a desktop or initiates a call on mobile devices, with options for different formatting styles and disabling the hyperlink functionality.
- [lightning-formatted-rich-text](lightning-formatted-rich-text.md): This component is a read-only display of rich text, formatted by HTML tags, that automatically creates links for text and email addresses, providing an interactive and visually appealing experience for the end user.
- [lightning-formatted-text](lightning-formatted-text.md): This component displays read-only text, with the ability to convert URLs and email addresses into clickable links, and newline characters into line breaks, providing a user-friendly reading experience.
- [lightning-formatted-time](lightning-formatted-time.md): This component displays a read-only representation of time in the user's locale format, providing a consistent, locale-specific time display experience.
- [lightning-formatted-url](lightning-formatted-url.md): This component is used to display a URL as a clickable link, with options to customize the displayed text and target, supporting both absolute and relative URLs for navigation within the same frame, a new tab, or a parent frame.
- [lightning-grouped-combobox](lightning-grouped-combobox.md): This component is a customizable dropdown menu with autocomplete support, allowing users to select from a list of options that can be dynamically updated based on user input.
- [lightning-helptext](lightning-helptext.md): This component displays an icon with a popover containing brief text to describe an element on the screen, providing field-level help and enhancing user experience by automatically adjusting its position according to the viewport.
- [lightning-i18n-cldr-options](lightning-i18n-cldr-options.md): This component is designed to facilitate internal usage on the platform by providing localization options generated from the Localizer's i18n-cldr-options, maintained by the globalization team, enhancing the user's global experience.
- [lightning-i18n-service](lightning-i18n-service.md): This component is a module that provides internationalization services, maintained by the globalization team, for internal usage on the platform, enhancing the user's experience by supporting multiple languages and locales.
- [lightning-icon](lightning-icon.md): This component is a visual element that enhances usability by providing context through the use of customizable icons from the Lightning Design System or custom icons, offering a visually engaging experience to the end user.
- [lightning-input](lightning-input.md): This component is a versatile input field that supports various types such as text, number, date, email, url, and more, providing users with a tailored data entry experience based on the specified type.
- [lightning-input-address](lightning-input-address.md): This component is a compound field that allows users to input an address, with options for prepopulating fields, marking fields as required, and supporting predefined lists of states and countries, providing an interactive and customizable user experience.
- [lightning-input-location](lightning-input-location.md): This component is a geolocation field that allows users to input latitude and longitude values, providing an interactive experience for identifying specific geographic locations.
- [lightning-input-name](lightning-input-name.md): This component is a customizable input field for names, allowing users to input and edit various parts of a name, such as the salutation, first name, and last name, with options for field-level help, required fields, and disabled fields for a user-friendly experience.
- [lightning-internationalization-library](lightning-internationalization-library.md): This component is a utility that aids in the transition from Aura's localization service to a universal solution based on standards, providing a seamless experience in formatting and parsing dates/times regardless of the environment in which a component is run.
- [lightning-layout](lightning-layout.md): This component is a flexible grid system that allows for the arrangement of containers within a page or another container, providing a customizable layout experience with options for horizontal and vertical alignment, boundary pulling, and column creation.
- [lightning-layout-item](lightning-layout-item.md): This component is used to define and arrange content within a layout, with the ability to configure the size and flexibility of the layout item, allowing for adaptive design across different device sizes.
- [lightning-media-utils](lightning-media-utils.md): This component provides utility functions for processing media files, allowing developers to resize, compress, and modify images according to specified parameters, enhancing the user's experience by optimizing image uploads and reducing bandwidth usage.
- [lightning-menu-divider](lightning-menu-divider.md): This component creates a dividing line in a menu, allowing for the separation of items into groups or categories, enhancing user navigation and organization.
- [lightning-menu-item](lightning-menu-item.md): This component is a customizable menu item within a dropdown menu, which can hold different states, display icons, and provide navigation through URLs, enhancing user interaction and experience.
- [lightning-menu-subheader](lightning-menu-subheader.md): This component creates a bold, slightly larger heading within a list of menu items, helping to categorize items and improve usability for long lists.
- [lightning-message-dispatcher](lightning-message-dispatcher.md): This component enables communication with an iframe, providing a seamless interaction experience between the user interface and embedded content.
- [lightning-mixin-builder](lightning-mixin-builder.md): This component is a mixin builder that allows for the combination of multiple classes or functionalities into a single class, enhancing the user experience by providing more precise and detailed information.
- [lightning-modal-body](lightning-modal-body.md): This component is used to render the content of a modal, providing an interactive user experience with automatic scrolling and customizable styling options.
- [lightning-modal-footer](lightning-modal-footer.md): This component is used to create an optional footer at the bottom of a modal dialog, providing an organized space for interactive elements like buttons, and offering customization options for styling and accessibility.
- [lightning-modal-header](lightning-modal-header.md): This component is used to display a header text in a panel at the top of a modal dialog, providing an optional tagline and custom styling, enhancing the user's experience with clear labeling and accessible design.
- [lightning-navigation](lightning-navigation.md): This component provides the functionality to generate URLs or navigate to different pages within an application, offering a seamless navigation experience to the end user.
- [lightning-overlay](lightning-overlay.md): This component is a foundational element in the overlay library, primarily used by developers to create new overlay types, providing a simple or advanced overlay experience depending on the need for wrapping HTML.
- [lightning-picklist](lightning-picklist.md): This component is a versatile selection tool that presents a combobox for single selections and a dual listbox for multiple selections, providing a user-friendly interface for choosing from a list of options.
- [lightning-pill](lightning-pill.md): This component is a user interface element that represents an item, such as an account name or case number, with optional features like a remove button, an icon or avatar, and error indication, providing an interactive experience for users to add or remove items on demand.
- [lightning-pill-container](lightning-pill-container.md): This component is a user interface element that displays a list of user selections, represented as "pills", in a container that resembles an input field, providing an interactive experience for users to manage their selections.
- [lightning-popup](lightning-popup.md): This component is used to create interactive popup windows that open in response to user actions, providing a focused and immersive experience by trapping focus within the popup and allowing for custom content and alignment options.
- [lightning-position-library](lightning-position-library.md): This component is a testing tool that provides an interactive playground for experimenting with the positioning of elements such as helptext, button-menu, combobox, and datepicker.
- [lightning-progress-bar](lightning-progress-bar.md): This component is a visual indicator that displays the progress of an operation, such as a file download or upload, from left to right, providing users with a clear understanding of the operation's completion status.
- [lightning-progress-indicator](lightning-progress-indicator.md): This component is a visual tool that displays a horizontal list of steps in a process, indicating the current step, completed steps, and upcoming steps, providing users with a clear understanding of their progress in a given task or process.
- [lightning-progress-ring](lightning-progress-ring.md): This component is a circular progress indicator that visually represents a value from 0 to 100, providing users with feedback on the status of a process or action through various color fills and optional icons.
- [lightning-progress-step](lightning-progress-step.md): This component represents a step in a progress indicator, displaying a label and value, and providing user interaction through custom events and tooltips, enhancing the user's navigation experience.
- [lightning-prompt](lightning-prompt.md): This component allows the creation of a customizable prompt modal within your application, providing a consistent user experience by asking for user input without halting execution on the page.
- [lightning-radio-group](lightning-radio-group.md): This component is a group of radio buttons that allows only one selection at a time, providing an interactive user experience with options for input validation, customization of appearance, and accessibility features.
- [lightning-relative-date-time](lightning-relative-date-time.md): This component displays the relative time between the current time and a provided date/time, formatted according to the user's locale, providing an intuitive understanding of time passed or time remaining.
- [lightning-select](lightning-select.md): This component is a customizable dropdown menu that allows for single or multiple selections from a list of options, providing an interactive and accessible user experience.
- [lightning-slider](lightning-slider.md): This component is a customizable input range slider that allows users to specify a numeric value within a defined range.
- [lightning-spinner](lightning-spinner.md): This component is an animated spinner image that indicates a feature is loading, providing a visual cue to users during data retrieval or any operation that doesn't immediately complete.
- [lightning-stacked-tab](lightning-stacked-tab.md): This component is a tabbed container that organizes related content, providing an interactive user experience where content is displayed upon clicking a tab, with additional mobile support for sliding content into view.
- [lightning-stacked-tabset](lightning-stacked-tabset.md): This component is a container for multiple related content sections, providing the user with a navigable interface to show and hide these sections as needed.
- [lightning-tab](lightning-tab.md): This component is a tabbed container that allows users to switch between different content sections by clicking on the respective tab, providing a streamlined and organized user experience.
- [lightning-tabset](lightning-tabset.md): This component is a tabbed container that organizes multiple content areas into separate tabs, providing users with an easy way to switch between different sections of information or functionality without leaving the page.
- [lightning-textarea](lightning-textarea.md): This component is a customizable text input field that supports multi-line text, input validation, programmable text insertion, autocomplete, and accessibility features, providing an interactive user experience for entering and managing text content.
- [lightning-tile](lightning-tile.md): This component is a versatile and customizable tile that groups related information, which can be paired with an icon or avatar, providing an interactive and visually appealing way to present data to the user.
- [lightning-toast](lightning-toast.md): This component displays a toast notification with an icon, label, message, and links, providing users with brief, pertinent information and feedback after they perform an action.
- [lightning-toast-container](lightning-toast-container.md): This component manages and displays a list of toast notifications on a webpage, providing the user with an interactive experience where they can navigate between notifications using keyboard shortcuts.
- [lightning-tree](lightning-tree.md): This component is a visual representation of a structural hierarchy, such as a website sitemap or an organizational role hierarchy, that allows users to navigate through nested items, which can be expanded or collapsed, and provides an interactive user experience with the ability to select items, add or remove items, and programmatically control item selection and branch expansion.
- [lightning-tree-grid](lightning-tree-grid.md): This component is a table-like structure that displays hierarchical data with expandable rows, providing users with a visual representation of structured data such as account hierarchies or forecasting data.
- [lightning-vertical-navigation](lightning-vertical-navigation.md): This component is a vertical navigation menu that provides a list of links, with support for overflow sections, icons, badges, and links, offering a user-friendly navigation experience with highlighted selections and compact spacing options.
- [lightning-vertical-navigation-item](lightning-vertical-navigation-item.md): This component serves as a navigation item within a vertical navigation system, providing a structured user experience for navigating through different sections.
- [lightning-vertical-navigation-item-badge](lightning-vertical-navigation-item-badge.md): This component is a navigation item that enhances user experience by displaying a numerical badge to the right of the item label, indicating additional information or notifications related to that item.
- [lightning-vertical-navigation-item-icon](lightning-vertical-navigation-item-icon.md): This component is a navigational item that enhances user experience by displaying an icon to the left of the item label, supporting icons from the Lightning Design System.# Lightning Base Components Index

- [lightning-accordion](lightning-accordion.md): This component is a user interface element that displays vertically stacked sections of content that can be expanded or collapsed, allowing users to control the visibility of content and reduce the need for scrolling.
- [lightning-accordion-section](lightning-accordion-section.md): This component is used to define the content of an individual section within an accordion-style interface, providing an interactive user experience where sections can be expanded or collapsed by clicking on the header text or toggle button.
- [lightning-alert](lightning-alert.md): This component allows the creation of an alert modal within a system, providing a consistent user experience by communicating system-wide states and not halting execution on the page.
- [lightning-aria-observer](lightning-aria-observer.md): This component provides a way to create accessible web components that work in both synthetic and native shadow, allowing for the connection of internal elements with external references, thus enhancing the user's experience with improved accessibility.
- [lightning-avatar](lightning-avatar.md): This component is an image representation of an object, such as a user or account, that provides a visual identifier with customizable sizing, shape, and fallback options for an enhanced user experience.
- [lightning-badge](lightning-badge.md): This component is a label that holds small amounts of information, such as unread notifications or text labels, and can be customized with text only or with an icon before or after the text, providing a clear and concise way to display brief information to the user.
- [lightning-barcode-scanner](lightning-barcode-scanner.md): This component provides a user-interactive barcode scanning function, which can be customized to support specific barcode types, scanning modes, and scanner sizes, and can be triggered by clicking an icon that can also be customized in size and appearance.
- [lightning-breadcrumb](lightning-breadcrumb.md): This component displays a navigational path relative to a parent page, providing users with an actionable and intuitive way to navigate through different levels of an application's hierarchy.
- [lightning-breadcrumbs](lightning-breadcrumbs.md): This component is an ordered list that displays the navigation path of a page, allowing users to easily navigate back to parent pages, with each item being actionable and separated by a greater-than sign for a clear and accessible user experience.
- [lightning-button](lightning-button.md): This component is a customizable button that can execute actions, display different colors and icons, and provide various user experiences such as submitting a form, starting a new task, triggering a new UI element, or specifying a new step in a process.
- [lightning-button-group](lightning-button-group.md): This component is a set of buttons displayed together to create a navigational bar, providing an interactive user experience with options for simple buttons, buttons with icons, disabled buttons, inverse buttons, and dropdown menus.
- [lightning-button-icon](lightning-button-icon.md): This component is an icon-only button that executes an action when clicked, providing a customizable user experience with options for different sizes, styles, and icons, and ensuring accessibility with features like hover text and assistive text.
- [lightning-button-icon-stateful](lightning-button-icon-stateful.md): This component is an icon-only button that toggles between two states, providing an interactive user experience for tasks such as capturing customer feedback or toggling settings.
- [lightning-button-menu](lightning-button-menu.md): This component is a button that displays a dropdown menu of actions or functions when clicked, providing an interactive user experience with customizable styles, loading states, and accessibility features.
- [lightning-button-stateful](lightning-button-stateful.md): This component is a stateful button that toggles between different states, displaying different labels and icons based on its selected state, providing an interactive user experience similar to a social media Like button.
- [lightning-card](lightning-card.md): This component is a stylized container that groups information, optionally including a title, body, actions, and a footer, providing an interactive user experience with clickable actions and links.
- [lightning-carousel](lightning-carousel.md): This component is a customizable image carousel that displays a series of images one at a time, with user controls for scrolling and optional auto-scrolling, providing an interactive and visually engaging user experience.
- [lightning-carousel-image](lightning-carousel-image.md): This component allows for the display of up to five images in a carousel format, complete with optional headers, descriptions, and hyperlinks, providing an interactive and visually engaging user experience.
- [lightning-checkbox-group](lightning-checkbox-group.md): This component is a group of checkboxes that allows users to select single or multiple options, with features for required selection, disabled selection, input validation, and customizable styling, providing an interactive and accessible user experience.
- [lightning-combobox](lightning-combobox.md): This component is an input element that allows users to make a single selection from a dropdown list of options, providing an interactive and accessible user experience.
- [lightning-confirm](lightning-confirm.md): This component allows the creation of a confirm modal within your application, providing a consistent user experience by asking for user confirmation before proceeding, with the modal's appearance and behavior customizable through various attributes.
- [lightning-context](lightning-context.md): This component provides a method for passing data through the component tree, allowing child components to consume context data without manual prop passing, enhancing the user experience by enabling theme consistency across components.
- [lightning-datatable](lightning-datatable.md): This component is a versatile table element that supports a variety of data types and allows for customization, providing users with a dynamic and interactive data viewing experience.
- [lightning-dialog](lightning-dialog.md): This component is a modal dialog that displays content in a layer above the application, maintaining user focus until closed, and can include a header, footer, and body content, with the ability to control its size and style.
- [lightning-dual-listbox](lightning-dual-listbox.md): This component is a dual listbox that allows users to select one or more options from a list on the left and move them to a list on the right, maintaining the order of the selected options and providing the ability to reorder them, offering a user-friendly interface for multi-selection and organization of options.
- [lightning-dynamic-icon](lightning-dynamic-icon.md): This component is a dynamic icon that visually indicates an event in progress, providing users with a variety of animated visual cues such as pulsing circles, rising and falling bars, and animated arrows.
- [lightning-file-download](lightning-file-download.md): This component allows users to download files from Experience Cloud sites using a generated URL, providing an interactive experience through a download button.
- [lightning-formatted-address](lightning-formatted-address.md): This component displays user-specified addresses in a format determined by the user's Salesforce locale, with options to include latitude and longitude, display the address in plain text, or show a static map, providing an interactive experience by linking the address to Google Maps.
- [lightning-formatted-date-time](lightning-formatted-date-time.md): This component is designed to display date and time in a formatted manner, providing a user-friendly experience by adapting to the user's locale and allowing customization of the date and time display.
- [lightning-formatted-email](lightning-formatted-email.md): This component displays a read-only email address as a clickable hyperlink, which when clicked, opens the default mail application for the user's device.
- [lightning-formatted-location](lightning-formatted-location.md): This component is designed to display a read-only representation of geographic coordinates (latitude and longitude) in decimal degrees format, providing users with a clear and precise location information.
- [lightning-formatted-name](lightning-formatted-name.md): This component displays names in a formatted manner based on user preferences, providing an experience that adapts to different locales and name formats.
- [lightning-formatted-number](lightning-formatted-number.md): This component is used to display formatted numbers for decimals, currency, and percentages, providing an end user with a customizable, locale-specific numerical display.
- [lightning-formatted-phone](lightning-formatted-phone.md): This component displays a read-only phone number as a clickable hyperlink that, when clicked, opens the default VOIP call application on a desktop or initiates a call on mobile devices, with options for different formatting styles and disabling the hyperlink functionality.
- [lightning-formatted-rich-text](lightning-formatted-rich-text.md): This component is a read-only display of rich text, formatted by HTML tags, that automatically creates links for text and email addresses, providing an interactive and visually appealing experience for the end user.
- [lightning-formatted-text](lightning-formatted-text.md): This component displays read-only text, with the ability to convert URLs and email addresses into clickable links, and newline characters into line breaks, providing a user-friendly reading experience.
- [lightning-formatted-time](lightning-formatted-time.md): This component displays a read-only representation of time in the user's locale format, providing a consistent, locale-specific time display experience.
- [lightning-formatted-url](lightning-formatted-url.md): This component is used to display a URL as a clickable link, with options to customize the displayed text and target, supporting both absolute and relative URLs for navigation within the same frame, a new tab, or a parent frame.
- [lightning-grouped-combobox](lightning-grouped-combobox.md): This component is a customizable dropdown menu with autocomplete support, allowing users to select from a list of options that can be dynamically updated based on user input.
- [lightning-helptext](lightning-helptext.md): This component displays an icon with a popover containing brief text to describe an element on the screen, providing field-level help and enhancing user experience by automatically adjusting its position according to the viewport.
- [lightning-i18n-cldr-options](lightning-i18n-cldr-options.md): This component is designed to facilitate internal usage on the platform by providing localization options generated from the Localizer's i18n-cldr-options, maintained by the globalization team, enhancing the user's global experience.
- [lightning-i18n-service](lightning-i18n-service.md): This component is a module that provides internationalization services, maintained by the globalization team, for internal usage on the platform, enhancing the user's experience by supporting multiple languages and locales.
- [lightning-icon](lightning-icon.md): This component is a visual element that enhances usability by providing context through the use of customizable icons from the Lightning Design System or custom icons, offering a visually engaging experience to the end user.
- [lightning-input](lightning-input.md): This component is a versatile input field that supports various types such as text, number, date, email, url, and more, providing users with a tailored data entry experience based on the specified type.
- [lightning-input-address](lightning-input-address.md): This component is a compound field that allows users to input an address, with options for prepopulating fields, marking fields as required, and supporting predefined lists of states and countries, providing an interactive and customizable user experience.
- [lightning-input-location](lightning-input-location.md): This component is a geolocation field that allows users to input latitude and longitude values, providing an interactive experience for identifying specific geographic locations.
- [lightning-input-name](lightning-input-name.md): This component is a customizable input field for names, allowing users to input and edit various parts of a name, such as the salutation, first name, and last name, with options for field-level help, required fields, and disabled fields for a user-friendly experience.
- [lightning-internationalization-library](lightning-internationalization-library.md): This component is a utility that aids in the transition from Aura's localization service to a universal solution based on standards, providing a seamless experience in formatting and parsing dates/times regardless of the environment in which a component is run.
- [lightning-layout](lightning-layout.md): This component is a flexible grid system that allows for the arrangement of containers within a page or another container, providing a customizable layout experience with options for horizontal and vertical alignment, boundary pulling, and column creation.
- [lightning-layout-item](lightning-layout-item.md): This component is used to define and arrange content within a layout, with the ability to configure the size and flexibility of the layout item, allowing for adaptive design across different device sizes.
- [lightning-media-utils](lightning-media-utils.md): This component provides utility functions for processing media files, allowing developers to resize, compress, and modify images according to specified parameters, enhancing the user's experience by optimizing image uploads and reducing bandwidth usage.
- [lightning-menu-divider](lightning-menu-divider.md): This component creates a dividing line in a menu, allowing for the separation of items into groups or categories, enhancing user navigation and organization.
- [lightning-menu-item](lightning-menu-item.md): This component is a customizable menu item within a dropdown menu, which can hold different states, display icons, and provide navigation through URLs, enhancing user interaction and experience.
- [lightning-menu-subheader](lightning-menu-subheader.md): This component creates a bold, slightly larger heading within a list of menu items, helping to categorize items and improve usability for long lists.
- [lightning-message-dispatcher](lightning-message-dispatcher.md): This component enables communication with an iframe, providing a seamless interaction experience between the user interface and embedded content.
- [lightning-mixin-builder](lightning-mixin-builder.md): This component is a mixin builder that allows for the combination of multiple classes or functionalities into a single class, enhancing the user experience by providing more precise and detailed information.
- [lightning-modal-body](lightning-modal-body.md): This component is used to render the content of a modal, providing an interactive user experience with automatic scrolling and customizable styling options.
- [lightning-modal-footer](lightning-modal-footer.md): This component is used to create an optional footer at the bottom of a modal dialog, providing an organized space for interactive elements like buttons, and offering customization options for styling and accessibility.
- [lightning-modal-header](lightning-modal-header.md): This component is used to display a header text in a panel at the top of a modal dialog, providing an optional tagline and custom styling, enhancing the user's experience with clear labeling and accessible design.
- [lightning-navigation](lightning-navigation.md): This component provides the functionality to generate URLs or navigate to different pages within an application, offering a seamless navigation experience to the end user.
- [lightning-overlay](lightning-overlay.md): This component is a foundational element in the overlay library, primarily used by developers to create new overlay types, providing a simple or advanced overlay experience depending on the need for wrapping HTML.
- [lightning-picklist](lightning-picklist.md): This component is a versatile selection tool that presents a combobox for single selections and a dual listbox for multiple selections, providing a user-friendly interface for choosing from a list of options.
- [lightning-pill](lightning-pill.md): This component is a user interface element that represents an item, such as an account name or case number, with optional features like a remove button, an icon or avatar, and error indication, providing an interactive experience for users to add or remove items on demand.
- [lightning-pill-container](lightning-pill-container.md): This component is a user interface element that displays a list of user selections, represented as "pills", in a container that resembles an input field, providing an interactive experience for users to manage their selections.
- [lightning-popup](lightning-popup.md): This component is used to create interactive popup windows that open in response to user actions, providing a focused and immersive experience by trapping focus within the popup and allowing for custom content and alignment options.
- [lightning-position-library](lightning-position-library.md): This component is a testing tool that provides an interactive playground for experimenting with the positioning of elements such as helptext, button-menu, combobox, and datepicker.
- [lightning-progress-bar](lightning-progress-bar.md): This component is a visual indicator that displays the progress of an operation, such as a file download or upload, from left to right, providing users with a clear understanding of the operation's completion status.
- [lightning-progress-indicator](lightning-progress-indicator.md): This component is a visual tool that displays a horizontal list of steps in a process, indicating the current step, completed steps, and upcoming steps, providing users with a clear understanding of their progress in a given task or process.
- [lightning-progress-ring](lightning-progress-ring.md): This component is a circular progress indicator that visually represents a value from 0 to 100, providing users with feedback on the status of a process or action through various color fills and optional icons.
- [lightning-progress-step](lightning-progress-step.md): This component represents a step in a progress indicator, displaying a label and value, and providing user interaction through custom events and tooltips, enhancing the user's navigation experience.
- [lightning-prompt](lightning-prompt.md): This component allows the creation of a customizable prompt modal within your application, providing a consistent user experience by asking for user input without halting execution on the page.
- [lightning-radio-group](lightning-radio-group.md): This component is a group of radio buttons that allows only one selection at a time, providing an interactive user experience with options for input validation, customization of appearance, and accessibility features.
- [lightning-relative-date-time](lightning-relative-date-time.md): This component displays the relative time between the current time and a provided date/time, formatted according to the user's locale, providing an intuitive understanding of time passed or time remaining.
- [lightning-select](lightning-select.md): This component is a customizable dropdown menu that allows for single or multiple selections from a list of options, providing an interactive and accessible user experience.
- [lightning-slider](lightning-slider.md): This component is a customizable input range slider that allows users to specify a numeric value within a defined range.
- [lightning-spinner](lightning-spinner.md): This component is an animated spinner image that indicates a feature is loading, providing a visual cue to users during data retrieval or any operation that doesn't immediately complete.
- [lightning-stacked-tab](lightning-stacked-tab.md): This component is a tabbed container that organizes related content, providing an interactive user experience where content is displayed upon clicking a tab, with additional mobile support for sliding content into view.
- [lightning-stacked-tabset](lightning-stacked-tabset.md): This component is a container for multiple related content sections, providing the user with a navigable interface to show and hide these sections as needed.
- [lightning-tab](lightning-tab.md): This component is a tabbed container that allows users to switch between different content sections by clicking on the respective tab, providing a streamlined and organized user experience.
- [lightning-tabset](lightning-tabset.md): This component is a tabbed container that organizes multiple content areas into separate tabs, providing users with an easy way to switch between different sections of information or functionality without leaving the page.
- [lightning-textarea](lightning-textarea.md): This component is a customizable text input field that supports multi-line text, input validation, programmable text insertion, autocomplete, and accessibility features, providing an interactive user experience for entering and managing text content.
- [lightning-tile](lightning-tile.md): This component is a versatile and customizable tile that groups related information, which can be paired with an icon or avatar, providing an interactive and visually appealing way to present data to the user.
- [lightning-toast](lightning-toast.md): This component displays a toast notification with an icon, label, message, and links, providing users with brief, pertinent information and feedback after they perform an action.
- [lightning-toast-container](lightning-toast-container.md): This component manages and displays a list of toast notifications on a webpage, providing the user with an interactive experience where they can navigate between notifications using keyboard shortcuts.
- [lightning-tree](lightning-tree.md): This component is a visual representation of a structural hierarchy, such as a website sitemap or an organizational role hierarchy, that allows users to navigate through nested items, which can be expanded or collapsed, and provides an interactive user experience with the ability to select items, add or remove items, and programmatically control item selection and branch expansion.
- [lightning-tree-grid](lightning-tree-grid.md): This component is a table-like structure that displays hierarchical data with expandable rows, providing users with a visual representation of structured data such as account hierarchies or forecasting data.
- [lightning-vertical-navigation](lightning-vertical-navigation.md): This component is a vertical navigation menu that provides a list of links, with support for overflow sections, icons, badges, and links, offering a user-friendly navigation experience with highlighted selections and compact spacing options.
- [lightning-vertical-navigation-item](lightning-vertical-navigation-item.md): This component serves as a navigation item within a vertical navigation system, providing a structured user experience for navigating through different sections.
- [lightning-vertical-navigation-item-badge](lightning-vertical-navigation-item-badge.md): This component is a navigation item that enhances user experience by displaying a numerical badge to the right of the item label, indicating additional information or notifications related to that item.
- [lightning-vertical-navigation-item-icon](lightning-vertical-navigation-item-icon.md): This component is a navigational item that enhances user experience by displaying an icon to the left of the item label, supporting icons from the Lightning Design System.